@using System.Web.Optimization
@model MVCPL.Models.TaskViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Task editing</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <div class="form-horizontal">
        <div class="form-group form-inline">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = " form-control" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = " form-control" } })
        </div>
        <div class="form-group form-inline">
            @Html.LabelFor(model => model.DeadlineDate, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.DeadlineDate, new { htmlAttributes = new { @class = " form-control" } })
            @Html.EditorFor(model => model.DeadlineTime, new { htmlAttributes = new { @class = " form-control" } })
        </div>
        <div class="form-group form-inline">
            @Html.LabelFor(model => model.TotalPoints, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.TotalPoints, new { htmlAttributes = new { @class = " form-control" } })
        </div>
        <div class="form-group form-inline">
            @Html.LabelFor(model => model.StatusName, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.StatusId, ViewBag.Statuses as SelectList, new { @class = " form-control" })
        </div>
        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-default" />
            @Html.ActionLink("Back", "TaskManagement", null, new { @class = "btn btn-default" })
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
