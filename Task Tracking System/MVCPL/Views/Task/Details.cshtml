@using System.Web.Optimization
@using MVCPL.Models
@model MVCPL.Models.TaskViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Task details</h2>
<hr />

<div>
    @using (Html.BeginForm())
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Title)
            @Html.DisplayFor(model => model.Title, new { @class = " form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description)
            @Html.DisplayFor(model => model.Description, new { @class = " form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CreationDateTime)
            @Html.DisplayFor(model => model.CreationDateTime, new { @class = " form-control" })
        </div>
        <div class="form-group text-danger">
            @Html.LabelFor(model => model.DeadlineDate)
            <b>
                @Html.DisplayFor(model => model.DeadlineDate, new { @class = " form-control" })
                @Html.DisplayFor(model => model.DeadlineTime, new { @class = " form-control" })
            </b>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Users)
            <table class="table table-hover">
                @if (Model.Users.Count == 0)
                {
                    <tr><td>There's no users for task now</td></tr>
                }
                else
                {
                    <tr>
                        <th>
                            @Html.DisplayName("User's name")
                        </th>
                        <th>
                            @Html.DisplayName("Progress")
                        </th>
                        <th>
                            @Html.DisplayName("Status")
                        </th>
                        <th></th>
                    </tr>
                    foreach (var user in ViewBag.Users as IEnumerable<UserViewModel>)
                    {
                        <tr>
                            <td>
                                @user.Email
                            </td>
                            <td>
                                @{
                                    var progress = (int)((double)user.Tasks.Find(t => t.Id == Model.Id).PointsCompleted / Model.TotalPoints * 100);
                                }
                                @progress%
                            </td>
                            <td>
                                @user.Tasks.Find(t => t.Id == Model.Id).StatusName
                            </td>
                            <td>
                                @Html.ActionLink("Resume", "ChangeStatus", new { name = "In progress", userId = user.Id, taskId = Model.Id }) |
                                @Html.ActionLink("Pause", "ChangeStatus", new { name = "Paused", userId = user.Id, taskId = Model.Id }) |
                                @Html.ActionLink("Cancel", "ChangeStatus", new { name = "Canceled", userId = user.Id, taskId = Model.Id })
                            </td>
                        </tr>
                                        }
                                    }
            </table>
        </div>
                                    }
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "TaskManagement")
</p>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}