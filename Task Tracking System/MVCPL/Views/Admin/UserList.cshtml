@using MVCPL.Helpers
@model MVCPL.Infrastructure.UserPagedData
@if (Model.Users.Any())
{
    <table class="table table-hover">
        <tr>
            <th>
                @Ajax.ActionLink("Email", "UserManagement",
               new { sortOrder = Model.SortInfo.NameSort, role = Model.FilterInfo.SelectedRole, name = Model.FilterInfo.Name },
               new AjaxOptions() { UpdateTargetId = "results" }, null)
            </th>
            <th>
                @Ajax.ActionLink("Creation date", "UserManagement",
               new { sortOrder = Model.SortInfo.DateSort, role = Model.FilterInfo.SelectedRole, name = Model.FilterInfo.Name },
               new AjaxOptions() { UpdateTargetId = "results" }, null)
            </th>
            <th>
                <span class="control-label">Role</span>
            </th>
            <th></th>
        </tr>
        @foreach (var item in Model.Users)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreationDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Role)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </table>
    <br />
        <div class="btn-group">
            @Html.PageLinks(Model.PageInfo, x => Url.Action("UserManagement",
           new { page = x, role = Model.FilterInfo.SelectedRole, name = Model.FilterInfo.Name, sortOrder = Model.SortInfo.Current, pageSize = Model.PageInfo.PageSize }))
        </div>
}
else
{
    <hr />
    <p>There's no users</p>
}